@using SituationMonitoring.Models

@{
    ViewBag.Title = "SituationMonitoringReport";
    Layout = "~/Views/Shared/_LayoutQuestionnaire.cshtml";
}


@functions {


    //  This Holding SitutionId Value  
    int SessionValue = int.Parse(HoldingDataClass.situationId);



    public double GetSum_Estimated_Number_Of_Individuals()
    {


        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {


            double avrg = 0;
            try {
                avrg = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                             .Select(i => i.Estimated_Number_Of_Individuals.Value).Average();



                return Math.Round(avrg, 2);
            }
            catch
            {
                return 0;
            }

        }



    }


    public double GetSum_Estimated_Number_Of_Families()
    {


        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            try
            {
                double avrg = 0;
                avrg = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                             .Select(i => i.Estimated_Number_Of_Families.Value).Average();

                return Math.Round(avrg, 2);
            }
            catch
            {
                return 0;
            }
        }
    }

    public int GetSum_Question()
    {
        int count = 0;
        try
        {
            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {
                count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                               .Select(i => i.QuestionnaireID).Count();
            };
            return count;
        }
        catch (Exception)
        {

            return 0;
        }

    }
    public int GetSum_Male()
    {
        try
        {
            int count = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {
                count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue && c.PersonGEnder == "ذكر")
                               .Select(i => i.QuestionnaireID).Count();
            };
            return count;
        }
        catch (Exception)
        {

            return 0;
        }

    }
    public int GetSum_Femal()
    {
        try
        {
            int count = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {
                count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue && c.PersonGEnder == "أنثى")
                               .Select(i => i.QuestionnaireID).Count();
            };
            return count;
        }
        catch (Exception)
        {

            return 0;
        }
    }


    #region (Question1.1)
    public double GetPer_Question1_1Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_1No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_1Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1 == "غير متأكد")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    #region

    public double GetPer_Question1_1_1Less10()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1_1 == "أقل من 10")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_1_1_10_50()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1_1 == "10-50")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_1_1_10_100()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1_1 == "100-50")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count),2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_1_1Over100()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_1_1 == "أكثر من 100")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count),2);
        };

        return FinalResult;
    }

    #endregion

    #endregion

    #region  (Question1.2)
    public double GetPer_Question1_2_1_Family_CommunityDisputes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_1_Family_CommunityDisputes == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_2_2()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question_1_2_2NotEnoughFood == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_3()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_3NotEnoughPrivacy == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_4()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_4NotEnoughDrinking == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_5()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_5UnsafeHousing == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_6()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_6Overcrowding == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_7()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_7InsufficientBedding == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_2_8()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_8NotEnoughWater == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_9()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_9Not_enough_humanitarian_assistance == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_2_10()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_10No_Access_to_essential_services == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_2_11()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_2_11Other == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }


    #endregion
    #region  (Question1.3)
    public double GetPer_Question1_3_1()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_1Family_CommunityDisputes == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_3_2()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_2NotEnoughFood == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_3()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_3NotEnoughPrivacy == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_4()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_4NotenoughDrinkingWater == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_5()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_5UnsafeHousing == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_6()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_6Overcrowding == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_7()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_7InsufficientBedding == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_3_8()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_8NotEnoughWater_otherThanDrinking == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_9()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_9Not_enough_humanitarian_assistance == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_3_10()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_10No_Access_to_essential_services == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question1_3_11()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_3_11Other == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }


    #endregion


    #region (Question1.4)
    public double GetPer_Question1_4Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_4 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_4No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_4 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question1_4Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question1_4 == "غير متأكد")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }



    #endregion


    #region  (Question 2.1)
    public double GetPer_Question2_1_1()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_1Family_CommunityDisputes == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_1_2()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_2NotEnoughFood == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_3()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_3enough_privacy_in_DES_rooms == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_4()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_4NotEnoughPrivacy == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_5()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_5NotDrinkingEnoughWater == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_6()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_6Unsafe_housing == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_7()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_7IOvercrowding == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_1_8()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_8Insufficient_bedding == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_9()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_9NotEnoughWater_OtherThanDrinking == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_1_10()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_10NotEnoughHumanitarianAssistanceForPeopleInNeed == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_11()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_11NoAccessToEssentialServices == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_12()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_12DistributionOfAssistanceExcludesChild_HeadedFamilies == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_13()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_13DistributionOfAssistanceExcludesWomen_HeadedFamilies == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_14()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_14LackOfSafeSpacesForWomenAndGirlsToGather == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_15()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_15LackOfSafeSpacesForChildrenToPlay == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_16()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_16LackOfAdequatelightingForToilets == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_17()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_17LackOfGenderSegregatedToilets == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_18()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_18LackOfGenderSegregatedBathingFacilitites == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_19()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_19LackOfAccessibleBathrooms == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_20()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_20DistributionOfAssistanceExcludePersonsWithDisabilitiesAndTheirFamilies == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_21()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_21LackOfAssistiveDevices == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_22()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_22ConcernOverFamilyMemberMissing == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question2_1_23()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_1_23Other == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }


    #endregion


    #region (Question2.2)
    public double GetPer_Question2_2Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_2 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_2No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_2 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_2Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_2 == "غير متأكد")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }



    #endregion


    #region (Question2.3)
    public double GetPer_Question2_3Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_3 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_3No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_3 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question2_3Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question2_3 == "غير متأكد")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }



    #endregion

    #region (Question 3.1)
    public double GetPer_Question3_1Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_1 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_1No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_1 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_1Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_1 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_1()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_1Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_1()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_1Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.2)
    public double GetPer_Question3_2Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_2 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_2No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_2 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_2Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_2 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_2()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_2Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_2()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_2Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.3)
    public double GetPer_Question3_3Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_3 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_3No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_3 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_3Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_3 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_3()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_3Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_3()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_3Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.4)
    public double GetPer_Question3_4Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_4 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_4No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_4 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_4Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_4 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_4()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_4Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_4()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_4Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion


    #region (Question 3.5)
    public double GetPer_Question3_5Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_5 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_5No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_5 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_5Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_5 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_5()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_5Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_5()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_5Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.6)
    public double GetPer_Question3_6Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_6 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_6No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_6 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_6Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_6 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_6()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_6Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_6()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_6Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion


    #region (Question 3.7)
    public double GetPer_Question3_7Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_7 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_7No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_7 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_7Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_7 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_7()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_7Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_7()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_7Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.8)
    public double GetPer_Question3_8Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_8 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_8No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_8 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_8Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_8 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_8()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_8Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_8()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_8Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion


    #region (Question 3.9)
    public double GetPer_Question3_9Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_9 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_9No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_9 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_9Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_9 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_9()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_9Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_9()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_9Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.10)
    public double GetPer_Question3_10Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_10 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_10No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_10 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_10Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_10 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_10()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_10Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_10()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_10Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.11)
    public double GetPer_Question3_11Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_11 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_11No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_11 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_11Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_11 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_11()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_11Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_11()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_11Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.12)
    public double GetPer_Question3_12Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_12 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_12No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_12 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_12Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_12 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_12()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_12Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_12()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_12Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.13)
    public double GetPer_Question3_13Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_13 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_13No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_13 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_13Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_13 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_13()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_13Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_13()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_13Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.14)
    public double GetPer_Question3_14Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_14 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_14No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_14 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_14Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_14 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }



    public int GetSUmFemal_Question3_14()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_14Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion
    #region (Question 3.15)
    public double GetPer_Question3_15Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_15 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_15No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_15 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_15Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_15 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }



    public int GetSUmFemal_Question3_15()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_15Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion
    #region (Question 3.16)
    public double GetPer_Question3_16Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_16 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_16No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_16 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_16Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_16 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_16()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_16Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_16()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_16Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.17)
    public double GetPer_Question3_17Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_17 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_17No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_17 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_17Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_17 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_17()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_17Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_17()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_17Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion
    #region (Question 3.18)
    public double GetPer_Question3_18Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_18 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_18No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_18 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_18Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_18 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_18()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_18Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_18()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_18Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion
    #region (Question 3.19)
    public double GetPer_Question3_19Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_19 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_19No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_19 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_19Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_19 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }




    public int GetSUmFemal_Question3_19()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_19Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion

    #region (Question 3.20)
    public double GetPer_Question3_20Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_20 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_20No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_20 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_20Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_20 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }




    #endregion
    #region (Question 3.21)
    public double GetPer_Question3_21Yes()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_21 == "نعم")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_21No()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_21 == "لا")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question3_21Dontknow()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question3_21 == "غير معروف")
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public int GetSUmMale_Question3_21()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_21Male.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {

            return 0;
        }

    }

    public int GetSUmFemal_Question3_21()
    {
        try
        {
            int sum = 0;

            using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
            {

                sum = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
               .Select(i => i.Question3_21Femal.Value).Sum();



            };

            return sum;
        }
        catch (Exception)
        {


            return 0;
        }
    }


    #endregion


    #region  (Question4.1)
    public double GetPer_Question4_1_1()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_1 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question4_1_2()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_2 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question4_1_3()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_3 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question4_1_4()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_4 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question4_1_5()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_5 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question4_1_6()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_6 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question4_1_7()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_7 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question4_1_8()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_8 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }
    public double GetPer_Question4_1_9()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_9 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }

    public double GetPer_Question4_1_10()
    {

        int count = 0;
        int truecount = 0;
        double FinalResult = 0;
        using (SituationMonitoringEntities entities = new SituationMonitoringEntities())
        {
            Func<int, int, double> ComputeIt = (x, y) => ((double)x / y) * 100;

            count = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue)
                       .Select(i => i.QuestionnaireID).Count();


            truecount = entities.Questionnaire_Table.Where(c => c.SituationID == SessionValue
                                           && c.Question4_1_10 == true)
                     .Select(i => i.QuestionnaireID).Count();

            FinalResult = Math.Round(ComputeIt(truecount, count), 2);
        };

        return FinalResult;
    }


    #endregion


    }
















<h2>SituationMonitoringReport</h2>
<div class="row">
    <div class="col-md-12">
        <div class="grid simple ">
            <div class="grid-title no-border">
                <h4 style="color:red">Table <span class="semi-bold">Styles</span></h4>
              
            </div>
            <div class="grid-body no-border">
                <table class="table table-bordered no-more-tables">

                    <tbody>
                        <tr>
                            <td colspan=4 class="alert alert-info"><h4 style="color:red">االتاريخ</h4></td>
                            <td colspan=4>هنا يوضع التاريخ</td>

                        </tr>

                        <tr>
                            <th colspan=8><h4 style="color:cornflowerblue"> الشخصيات الرئيسية للمقابلة  </h4></th>
                        </tr>
                        <tr>
                            <td width="20%" class="alert alert-success"><h5>عدد مزودي المعلومات الذين تم مقابلتهم</h5></td>
                            <td width="10%"class="alert alert-warning"><h4 style="color:red">@GetSum_Question()</h4></td>

                        </tr>

                        <tr>
                            <td colspan=2 class="alert alert-success"><h5>عدد الذكور</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetSum_Male()</h4></td>
                            <td colspan=2 class="alert alert-success"> <h5>عدد الاناث</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetSum_Femal()</h4></td>
                        </tr>

                        <tr>
                            <th colspan=8><h4 style="color:cornflowerblue">  معلومات الموقع</h4></th>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-success"><h5> المحافظة</h5></td>
                            <td colspan=1 class="alert alert-warning">هنا يوضع المحافظة</td>
                            <td colspan=1 class="alert alert-success"> <h5>المنطقة</h5></td>
                            <td colspan=1 class="alert alert-warning">هنا يوضع المنطقة</td>
                            <td colspan=2 class="alert alert-success"> <h5>اسم مركز الايواء</h5></td>
                            <td colspan=2 class="alert alert-warning">هنا يوضع اسم مركز الايواء</td>
                        </tr>

                        <tr>
                            <td colspan=2 class="alert alert-success"><h5>العدد التقديري الاجمالي للاشخاص</h5></td>
                            <td colspan=2 class="alert alert-success">العدد التقديري الاجمالي للعائلات</td>
                            <td colspan=4 class="alert alert-success"> <h5>وصف الموقع</h5></td>
                        </tr>
                        <tr>
                            <td colspan=2 class="alert alert-warning" ><h4 style="color:red">@GetSum_Estimated_Number_Of_Individuals()</h4></td>
                            <td colspan=2 class="alert alert-warning"><h4  style="color:red">@GetSum_Estimated_Number_Of_Families()</h4></td>
                            <td colspan=4 class="alert alert-warning"> <h5>وصف الموقع</h5></td>
                        </tr>

                        <tr>
                            <th colspan=8><h4 style="color:cornflowerblue"> 1. مخاوف حماية عامة خارج مركز الإيواء الجماعي</h4></th>
                        </tr>

                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>1.1 هل أنت على علم بأي مجموعات أسرية تعيش مع عائلات مضيفة؟</h5></td>
                        </tr>

                        <tr>
                            <td width="10%" class="alert alert-success"><h5>نعم</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1Yes()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>لا</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1No()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>غير متأكد</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1Dontknow()%</h4></td>


                        </tr>
                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>1.1.1 إذا كانت الإجابة بنعم، ما هو عدد المجموعات الأسرية التي تقيم مع عائلات مضيفة؟</h5></td>
                        </tr>

                        <tr>
                            <td width="10%" class="alert alert-success"><h5>اقل من 10</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1_1Less10()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>10 – 50 من</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1_1_10_50()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>50 – 100 من</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1_1_10_100()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>أكثر من 100</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_1_1Over100()%</h4></td>

                        </tr>
                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>1.2 ما هي اهتمامات الحماية الرئيسية لتلك الأسر؟</h5></td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.1</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خلافات عائلية</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_1_Family_CommunityDisputes()% </h4></td>
                            <td class="v-align-middle" colspan=2>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_1_Family_CommunityDisputes()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.2</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>غذاء غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_2()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_2()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.3</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خصوصية غير كافية</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_3()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_3()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.4</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>مياه شرب غير كافية</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_4()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_4()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.5</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>سكن غير آمن</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_5()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_5()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.6</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>اكتظاظ في المسكن</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_6()% </h4></td>
                            <td class="v-align-middle" colspan=2>
                               
                                    <div class="progress">

                                        <div data-percentage="@GetPer_Question1_2_6()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                              </div>


</td>

                        </tr>


                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.7</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>فراش غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_7()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_7()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.8</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>مياه قليلة (غير مياه الشرب)</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_8()%</h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_8()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.9</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>المساعدة الإنسانية غير كافية للأشخاص المحتاجين </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_9()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_9()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>


                            </tr>
                        <tr>
                            <td colspan=3><h5> حدد نوع المساعدة:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>





                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.10</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم القدرة على الوصول إلى الخدمات الأساسية </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_10()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_10()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                            </tr>

                        <tr>

                            <td colspan=3><h5> حدد نوع الخدمات:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.2.11</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>غير ذلك  </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_2_11()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_2_11()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td colspan=3><h5> أذكرها:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>1.3 ما هي الاهتمامات الرئيسية لأشخاص آخرين في مجتمعك غير الأشخاص الذين يقيمون مع عائلات مضيفة؟</h5></td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.1</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خلافات عائلية</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_1()% </h4></td>
                            <td class="v-align-middle" colspan=2>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_1()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.2</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>غذاء غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_2()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_2()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.3</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خصوصية غير كافية</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_3()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_3()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.4</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>ماء شرب غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_4()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_4()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.5</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>سكن غير آمن</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_5()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_5()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                            </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.6</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>إزدحام</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_6()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_6()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.7</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>فراش غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_7()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_7()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                       

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.8</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>لا يوجد ماء كافي (غير ماء الشرب)</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_8()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_8()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.9</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>لا يوجد مساعدة إغاثية لجميع المحتاجين</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_9()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_9()% " class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                            </tr>
                        <tr>

                            <td colspan=3><h5> اذكر أي المساعدات الإغاثية ناقصة:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.10</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم القدرة على الوصول إلى الخدمات الأساسية </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_10()%  </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_10()% " class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td colspan=3><h5> حدد نوع الخدمات:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>1.3.11</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>غير ذلك  </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_3_11()%  </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question1_3_11()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td colspan=3><h5> أذكرها:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>1.4	هل يعرف الناس في منطقتك أين يمكن التماس المساعدة و/أو المعلومات؟</h5></td>
                        </tr>

                        <tr>
                            <td width="10%" class="alert alert-success"><h5>نعم</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_4Yes()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>لا</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_4No()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>غير متأكد</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question1_4Dontknow()%</h4></td>


                        </tr>

                        <tr>

                            <td colspan=3><h5>1.4.1 إذا كان الجواب نعم، حيث يلتمس الناس المساعدة و/أو المعلومات؟</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <th colspan=8><h4 style="color:cornflowerblue"> 2. مخاوف حماية عامة داخل مركز الإيواء الجماعي</h4></th>
                        </tr>
                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>2.1 حسب علمك، ما هي اهتمامات الحماية الرئيسية داخل مراكز الإيواء؟</h5></td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.1</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خلافات عائلية</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_1()% </h4></td>
                            <td class="v-align-middle" colspan=2>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_1()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.2</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>غذاء غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_2()%  </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_2()% " class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.3</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خصوصية غير كافية في المراحيض ومرافق الاستحمام </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_3()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_3()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.4</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>خصوصية غير كافية في مركز الإيواء الجماعي </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_4()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_4()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.5</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>ماء شرب غير كافي </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_5()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_5()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.6</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>سكن غير آمن</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_6()% </h4></td>
                            <td class="v-align-middle" colspan=2>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_6()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>


                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.7</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>إزدحام</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_7()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_7()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.8</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>فراش غير كافي</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_8()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_8()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>


                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.9</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>لا يوجد ماء كافي (غير ماء الشرب) </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_9()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_9()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.10</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>لا يوجد مساعدة إغاثية لجميع المحتاجين</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_10()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_10()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td colspan=3><h5>اذكر أي المساعدات الإغاثية ناقصة:</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.11</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>لا إمكانية وصول إلى الخدمات الضرورية  </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_11()%</h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_11()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td colspan=3><h5> أذكر الخدمات</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.12</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>توزيع المساعدات يستثني الأسر التي يعيلها الأطفال </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_12()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_12()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.13</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>توزيع المساعدات يستثني الأسر التي تعيلها النساء </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_13()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_13()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.14</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>نقص الأماكن الآمنة لجمع النساء والفتيات معاً </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_14()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_14()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.15</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم وجود مساحات آمنة للعب الأطفال </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_15()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_15()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.16</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم وجود إضاءة آمنة للحمامات  </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_16()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_16()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.17</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم وجود حمامات منفصلة للجنسين</h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_17()%</h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_17()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                            </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.18</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم وجود مرافق استحمام منفصلة للجنسين </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_18()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_18()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.19</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم وجود حمامات يمكن الوصول إليها </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_19()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_19()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.20</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>توزيع المساعدة يستثنى الأشخاص ذوي الإعاقة وأسرهم </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_20()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_20()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.21</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>عدم وجود أجهزة مساعدة </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_21()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_21()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.22</h5></td>

                            <td colspan=3 class="alert alert-success"><h5> قلق على أفراد مفقودين </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_22()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_22()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>2.1.23</h5></td>

                            <td colspan=3 class="alert alert-success"><h5>غير ذلك  </h5></td>
                            <td colspan=2 class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_1_23()% </h4></td>
                            <td class="v-align-middle" colspan=3>
                                <div class="progress">
                                    <div data-percentage="@GetPer_Question2_1_23()%" class="progress-bar progress-bar-info animate-progress-bar"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td colspan=3><h5> أذكرها</h5></td>
                            <td colspan=5><h5> </h5></td>

                        </tr>

                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>2.2 هل يشعر الناس بعدم الأمان داخل مركز الإيواءالجماعي؟</h5></td>
                        </tr>

                        <tr>
                            <td width="10%" class="alert alert-success"><h5>نعم</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_2Yes()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>لا</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_2No()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>غير متأكد</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_2Dontknow()%</h4></td>


                        </tr>

                        <tr>

                            <td colspan=8><h5> 2.2.1 إذا كانت الإجابة بنعم، بأي طريقة (فسّر)؟</h5></td>

                        </tr>
                        <tr>

                            <td colspan=8></td>

                        </tr>

                        <tr>
                            <td colspan=8 class="alert alert-info"><h5>2.3 هل يعرف الناس داخل مراكز الإيواء كيفية الوصول إلى المساعدة و/أو المعلومات؟</h5></td>
                        </tr>

                        <tr>
                            <td width="10%" class="alert alert-success"><h5>نعم</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_3Yes()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>لا</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_3No()%</h4></td>
                            <td width="10%" class="alert alert-success"><h5>غير متأكد</h5></td>
                            <td width="10%" class="alert alert-warning"><h4 style="color:red">@GetPer_Question2_3Dontknow()%</h4></td>


                        </tr>

                        <tr>

                            <td colspan=8><h5> 2.3.1 إذا كانت الإجابة بنعم، أين يطلب الناس المساعدة و/أو المعلومات؟</h5></td>

                        </tr>
                        <tr>

                            <td colspan=8></td>

                        </tr>

                        <tr>
                            <th colspan=8><h4 style="color:cornflowerblue"> 3. اهتمامات الحماية المحددة خارج والتي تم تحديدها</h4></th>
                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-info"><h5>رقم</h5></td>
                            <td colspan=2 class="alert alert-info"><h5>البيان</h5></td>
                            <td colspan=1 class="alert alert-info"><h5>نعم</h5></td>
                            <td colspan=1 class="alert alert-info"><h5>لا</h5></td>
                            <td colspan=1 class="alert alert-info"><h5>غير متأكد</h5></td>
                            <td colspan=1 class="alert alert-info"><h5>تقدير الذكور</h5></td>
                            <td colspan=1 class="alert alert-info"><h5>تقدير الاناث</h5></td>


                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.1</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>أطفال منفصلين عن ذويهم من كلا من الوالدين أو مقدمي الرعاية المعتادة ولكن ليس بالضرورة من الأسرة الموسعة  </h5></td>
                            <td colspan=1 class="alert alert-warning" ><h4 style="color:red">@GetPer_Question3_1Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_1No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_1Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_1() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_1()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.2</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>أطفال منفصلين عن كلا ذويهم أو مقدمي الرعاية الاعتياديين وهم إما لوحدهم أو دون مقدم رعاية ملائم</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_2Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_2No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_2Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_2() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_2()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.3</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>طفل يعيل أسرته</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_3Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_3No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_3Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_3() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_3()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.4</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>أطفال يعانون من إصابات جسدية ويحتاجون إلى مساعدة </h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_4Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_4No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_4Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_4() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_4()</h4></td>

                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.5</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>بالغين يعانون من إصابات جسدية ويحتاجون إلى مساعدة </h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_5Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_5No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_5Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_5() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_5()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.6</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>أطفال تضرروا نتيجة العنف الأسري أو المجتمعي</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_6Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_6No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_6Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_6() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_6()</h4></td>


                        </tr>


                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.7</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>أشخاص بالغين تضرروا نتيجة العنف الأسري أو المجتمعي</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_7Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_7No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_7Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_7() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_7()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.8</h5></td>
                            <td colspan=2 class="alert alert-success"><h5> أطفال مصابين بالكرب الشديد</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_8Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_8No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_8Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_8() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_8()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.9</h5></td>
                            <td colspan=2 class="alert alert-success"><h5> بالغين مصابين بالكرب الشديد</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_9Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_9No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_9Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_9() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_9()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.10</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>الأطفال المشتركين في أشكال الاستغلال لعمالة الأطفال أو التسول</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_10Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_10No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_10Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_10() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_10()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.11</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>أطفال من ذوي إعاقة بحاجة لمساعدة خاصة</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_11Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_11No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_11Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_11() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_11()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.12</h5></td>
                            <td colspan=2 class="alert alert-success"><h5> بالغين من ذوي إعاقة بحاجة لمساعدة خاصة</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_12Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_12No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_12Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_12() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_12()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.13</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>حوادث عنف منزلي</h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_13Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_13No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_13Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_13() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_13()</h4></td>


                        </tr>


                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.14</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>نساء غير مصحوبات (غير متزوجة/مطلقة/منفصلة) </h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_14Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_14No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_14Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h5></h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_14()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.15</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>نساء أرامل نتيجة لحالة الطواريء </h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_15Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_15No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_15Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h5></h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_15()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.16</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>أشخاص يعانون من أمراض مزمنة/حالات صحة نفسية من دون علاج</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_16Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_16No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_16Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_16() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_16()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.17</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>كبار السن الذين يحتاجون إلى المساعدة </h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_17Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_17No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_17Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_17() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_17()</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.18</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>أشخاص متأثرين يحتاجون إلى المساعدة القانونية  </h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_18Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_18No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_18Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_18() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_18()</h4></td>


                        </tr>




                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.19</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>نساء حوامل وأمهات مرضعات بحاجة لبرامج تغذية علاجية تكميلية  </h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_19Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_19No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_19Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red"></h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_19()</h4></td>


                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.20</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>حوادث عنف جنسي </h5></td>

                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_20Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_20No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_20Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h5> </h5></td>
                            <td colspan=1 class="alert alert-warning"><h5></h5></td>
                           


                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>3.20</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>اهتمامات حماية أخرى</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_21Yes()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_21No()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question3_21Dontknow()%</h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmMale_Question3_21() </h4></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetSUmFemal_Question3_21()</h4></td>


                        </tr>


                        <tr>
                            <th colspan=8><h4 style="color:cornflowerblue"> 4. من يقدم المساعدة والدعم للناس المحتاجين</h4></th>
                        </tr>
                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>4.1</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>وزارة الشؤون الاجتماعية</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4  style="color:red"> @GetPer_Question4_1_1()% </h4></td>
                            <td colspan=1 class="alert alert-error"><h5>4.6</h5></td>
                             <td colspan=2 class="alert alert-success"><h5>شخصيات دينية</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4  style="color:red"> @GetPer_Question4_1_6()%</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>4.2</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>الشرطة</h5></td>
                            <td colspan=1 class="alert alert-warning"><h5  style="color:red">@GetPer_Question4_1_2()% </h5></td>
                            <td colspan=1 class="alert alert-error"><h5>4.7</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>المنظمات غير الحكومية الدولية</h5></td>
                            <td colspan=1 class="alert alert-warning"><h5  style="color:red">@GetPer_Question4_1_7()% </h5></td>


                        </tr>

                         <tr>
                            <td colspan=1 class="alert alert-error"><h5>4.3</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>المنظمات غير الحكومية المحلية</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red"> @GetPer_Question4_1_3()% </h4></td>
                            <td colspan=1 class="alert alert-error"><h5>4.8</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>لا أحد</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question4_1_8()% </h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>4.4</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>أعضاء المجتمع</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red"> @GetPer_Question4_1_4()%</h4></td>
                            <td colspan=1 class="alert alert-error"><h5>4.9</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>غير ذلك</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red"> @GetPer_Question4_1_9()%</h4></td>


                        </tr>

                        <tr>
                            <td colspan=1 class="alert alert-error"><h5>4.5</h5></td>

                            <td colspan=2 class="alert alert-success"><h5>القادة المجتمعيين</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red">@GetPer_Question4_1_5()% </h4></td>
                            <td colspan=1 class="alert alert-error"><h5>4.10</h5></td>
                            <td colspan=2 class="alert alert-success"><h5>لا أعرف</h5></td>
                            <td colspan=1 class="alert alert-warning"><h4 style="color:red"> @GetPer_Question4_1_10()%</h4></td>


                        </tr>
</tbody>
                </table>
                </div>


            </div>
    </div>
    </div>

